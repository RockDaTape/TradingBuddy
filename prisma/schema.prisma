generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Trade {
  id                   BigInt      @id
  accountId            Int
  contractId           String
  creationTimestamp    DateTime
  price                Float
  profitAndLoss        Float?
  fees                 Float
  side                 Int
  size                 Int
  voided               Boolean
  orderId              BigInt
  roundTurnCloseTrades RoundTurn[] @relation("RoundTurnCloseTrade")
  roundTurnOpenTrades  RoundTurn[] @relation("RoundTurnOpenTrade")
}

model Order {
  id                   BigInt      @id
  accountId            Int
  contractId           String
  creationTimestamp    DateTime
  updateTimestamp      DateTime?
  status               Int
  type                 Int
  side                 Int
  size                 Int
  limitPrice           Float?
  stopPrice            Float?
  roundTurnCloseOrders RoundTurn[] @relation("RoundTurnCloseOrder")
  roundTurnOpenOrders  RoundTurn[] @relation("RoundTurnOpenOrder")
}

model Rules {
  id         String   @id @default(uuid())
  content    String   @default("")
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model RoundTurn {
  roundTurnId           String   @id
  accountId             Int
  contractId            String
  openOrderId           BigInt
  openOrderTimestamp    DateTime
  openTradeId           BigInt
  openPrice             Float
  intraHighPrice        Float
  intraLowPrice         Float
  maxFavorableExcursion Float
  maxAdverseExcursion   Float
  closeOrderId          BigInt
  closeOrderTimestamp   DateTime
  closeTradeId          BigInt
  closePrice            Float
  profitAndLoss         Float
  fees                  Float
  side                  Int
  size                  Int
  durationSeconds       Int
  voided                Boolean
  relatedOrderIds       String[]
  closeOrder            Order    @relation("RoundTurnCloseOrder", fields: [closeOrderId], references: [id])
  closeTrade            Trade    @relation("RoundTurnCloseTrade", fields: [closeTradeId], references: [id])
  openOrder             Order    @relation("RoundTurnOpenOrder", fields: [openOrderId], references: [id])
  openTrade             Trade    @relation("RoundTurnOpenTrade", fields: [openTradeId], references: [id])
}

model TopStepCSV {
  id            String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  contractName  String
  enteredAt     DateTime
  exitedAt      DateTime
  entryPrice    Float
  exitPrice     Float
  fees          Float
  profitAndLoss Float
  size          Int
  type          String
  tradeDay      DateTime
  tradeDuration String
  importedAt    DateTime @default(now())

  @@index([contractName])
  @@index([enteredAt])
  @@index([tradeDay])
}
